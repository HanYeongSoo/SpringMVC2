2022-04-10

1. 스프링 MVC - 기본 기능
	.- jsp를 사용하지 않으면 Jar파일이 좋음
	. Jar에는 내장 서버가 들어있으며, webapp경로도 사용하지 않음

2. 로깅 간단히 알아보기
	.- SLF4J - 로그 관련 인터페이스
	.- Logback - SLF4J에서 제공하는 구현체 중 하나

	.- @RestController는 return되는 반환값을 HTTP 메세지 바디에 바로 입력함, @ResponseBody와 관련이 있음
	.- @Controller는 반환되는 return값을 뷰로 랜더링 하는거고 ..

	.- LEVEL: TRACE > DEBUG > INFO > WARN > ERROR
		개발 서버는 debug 출력
		운영 서버는 info 출력

	.- 올바른 로그 사용법
		.- log.debug("data={}", data) // log.debug("data="+data) 이걸로 하면 + 연산이 들어가버림

	.- 로그 사용 시 장점
		-1. 쓰레드 정보, 클래스 이름 같은 부가 정보를 함께 볼 수 있고, 출력 모양을 조정할 수 있다
		-2. 로그 레벨에 따라 개발 서버에서는 모든 로그를 출력하고, 운영서버에서는 출력하지 않는 등 로그를 상황에 맞게 조절할 수 있다.
		-3. 시스템 아웃 콘솔에만 출력하는 것이 아니라, 파일이나 네트워크 등, 로그를 별도의 위치에 남길 수 있다.
			특히 파일로 남길 때는 일별, 특정 용량에 따라 로그를 분할하는 것도 가능하다.
		-4. 성능도 일반 System.out보다 좋다. (내부 버퍼링, 멀티 쓰레드 등등) 그래서 실무에서는 꼭 로그를 사용해야 한다.

3. 요청 매핑
	.- 매핑 정보 
		.- @RestController
			. 위에서 정리 했다...
		.- @RequestMapping("/hello-basic")
			. /hello-basic 이라는 URL 호출이 오면 이 메서드가 실행되도록 매핑
			. 대부분의 속성을 배열[]로 제공하므로 다중 설정이 가능 ({"/hello-basic", "/hello-go"})

	.- 매핑 요청에 대해서 둘 다 허용함
		.- 매핑 : /hello-basic >>>>> URL 요청 : /hello-basic 이나 /hello-basic/ 이나 같게 봄

	.- HTTP 메서드는 method를 입력해주지 않을 시 모든 method요청에 반응함

	.- 최근 HTTP API는 다음과 같이 리소스 경로에 식별자를 넣는 스타일을 선호한다.
		ex) /mapping/userA
		ex) /users/1

	.- @RequestMapping 은 URL 경로를 템플릿화 할 수 있는데, @PathVariable 을 사용하면 매칭 되는 부분을 편리하게 조회할 수 있다.

	.- 
















